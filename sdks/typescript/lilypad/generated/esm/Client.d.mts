/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as core from "./core/index.mjs";
import * as Lilypad from "./api/index.mjs";
import { Organizations } from "./api/resources/organizations/client/Client.mjs";
import { ApiKeys } from "./api/resources/apiKeys/client/Client.mjs";
import { Webhooks } from "./api/resources/webhooks/client/Client.mjs";
import { Projects } from "./api/resources/projects/client/Client.mjs";
import { Spans } from "./api/resources/spans/client/Client.mjs";
import { Auth } from "./api/resources/auth/client/Client.mjs";
import { Users } from "./api/resources/users/client/Client.mjs";
import { ExternalApiKeys } from "./api/resources/externalApiKeys/client/Client.mjs";
import { Environments } from "./api/resources/environments/client/Client.mjs";
import { UserConsents } from "./api/resources/userConsents/client/Client.mjs";
import { Tags } from "./api/resources/tags/client/Client.mjs";
import { Comments } from "./api/resources/comments/client/Client.mjs";
import { Settings } from "./api/resources/settings/client/Client.mjs";
import { Ee } from "./api/resources/ee/client/Client.mjs";
export declare namespace LilypadClient {
    interface Options {
        environment: core.Supplier<string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        /** Override the X-API-Key header */
        apiKey: core.Supplier<string>;
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Override the X-API-Key header */
        apiKey?: string;
        /** Additional headers to include in the request. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
}
export declare class LilypadClient {
    protected readonly _options: LilypadClient.Options;
    protected _organizations: Organizations | undefined;
    protected _apiKeys: ApiKeys | undefined;
    protected _webhooks: Webhooks | undefined;
    protected _projects: Projects | undefined;
    protected _spans: Spans | undefined;
    protected _auth: Auth | undefined;
    protected _users: Users | undefined;
    protected _externalApiKeys: ExternalApiKeys | undefined;
    protected _environments: Environments | undefined;
    protected _userConsents: UserConsents | undefined;
    protected _tags: Tags | undefined;
    protected _comments: Comments | undefined;
    protected _settings: Settings | undefined;
    protected _ee: Ee | undefined;
    constructor(_options: LilypadClient.Options);
    get organizations(): Organizations;
    get apiKeys(): ApiKeys;
    get webhooks(): Webhooks;
    get projects(): Projects;
    get spans(): Spans;
    get auth(): Auth;
    get users(): Users;
    get externalApiKeys(): ExternalApiKeys;
    get environments(): Environments;
    get userConsents(): UserConsents;
    get tags(): Tags;
    get comments(): Comments;
    get settings(): Settings;
    get ee(): Ee;
    /**
     * @param {LilypadClient.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.createCustomerPortalStripeCustomerPortalPost()
     */
    createCustomerPortalStripeCustomerPortalPost(requestOptions?: LilypadClient.RequestOptions): core.HttpResponsePromise<string>;
    private __createCustomerPortalStripeCustomerPortalPost;
    /**
     * @param {Lilypad.StripeCheckoutSession} request
     * @param {LilypadClient.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link Lilypad.UnprocessableEntityError}
     *
     * @example
     *     await client.createCheckoutSessionStripeCreateCheckoutSessionPost({
     *         tier: 1
     *     })
     */
    createCheckoutSessionStripeCreateCheckoutSessionPost(request: Lilypad.StripeCheckoutSession, requestOptions?: LilypadClient.RequestOptions): core.HttpResponsePromise<string>;
    private __createCheckoutSessionStripeCreateCheckoutSessionPost;
    /**
     * @param {LilypadClient.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.getEventSummariesStripeEventSummariesGet()
     */
    getEventSummariesStripeEventSummariesGet(requestOptions?: LilypadClient.RequestOptions): core.HttpResponsePromise<Lilypad.EventSummaryResponse>;
    private __getEventSummariesStripeEventSummariesGet;
    /**
     * Get all spans for a given trace ID.
     *
     * @param {string} projectUuid
     * @param {string} traceId
     * @param {LilypadClient.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link Lilypad.UnprocessableEntityError}
     *
     * @example
     *     await client.getSpansByTraceIdProjectsProjectUuidTracesByTraceIdTraceIdGet("project_uuid", "trace_id")
     */
    getSpansByTraceIdProjectsProjectUuidTracesByTraceIdTraceIdGet(projectUuid: string, traceId: string, requestOptions?: LilypadClient.RequestOptions): core.HttpResponsePromise<Lilypad.SpanPublic[]>;
    private __getSpansByTraceIdProjectsProjectUuidTracesByTraceIdTraceIdGet;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
