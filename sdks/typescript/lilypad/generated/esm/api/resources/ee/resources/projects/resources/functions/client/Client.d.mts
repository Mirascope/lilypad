/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as core from "../../../../../../../../core/index.mjs";
import * as Lilypad from "../../../../../../../index.mjs";
import { Annotations } from "../resources/annotations/client/Client.mjs";
export declare namespace Functions {
    interface Options {
        environment: core.Supplier<string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        /** Override the X-API-Key header */
        apiKey: core.Supplier<string>;
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Override the X-API-Key header */
        apiKey?: string;
        /** Additional headers to include in the request. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
}
export declare class Functions {
    protected readonly _options: Functions.Options;
    protected _annotations: Annotations | undefined;
    constructor(_options: Functions.Options);
    get annotations(): Annotations;
    /**
     * Executes a function with specified parameters in a secure playground environment.
     *
     * @param {string} projectUuid
     * @param {string} functionUuid
     * @param {Lilypad.ee.projects.PlaygroundParameters} request
     * @param {Functions.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link Lilypad.BadRequestError}
     * @throws {@link Lilypad.NotFoundError}
     * @throws {@link Lilypad.RequestTimeoutError}
     * @throws {@link Lilypad.UnprocessableEntityError}
     * @throws {@link Lilypad.InternalServerError}
     *
     * @example
     *     await client.ee.projects.functions.runPlayground("project_uuid", "function_uuid", {
     *         arg_values: {
     *             "key": 1
     *         },
     *         provider: "openai",
     *         model: "model",
     *         prompt_template: "prompt_template"
     *     })
     */
    runPlayground(projectUuid: string, functionUuid: string, request: Lilypad.ee.projects.PlaygroundParameters, requestOptions?: Functions.RequestOptions): core.HttpResponsePromise<Lilypad.PlaygroundSuccessResponse>;
    private __runPlayground;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
