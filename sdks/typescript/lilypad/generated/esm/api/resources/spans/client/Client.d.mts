/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as core from "../../../../core/index.mjs";
import * as MirascopeApi from "../../../index.mjs";
import { Comments } from "../resources/comments/client/Client.mjs";
export declare namespace Spans {
    interface Options {
        environment: core.Supplier<string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        /** Override the X-API-Key header */
        apiKey: core.Supplier<string>;
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Override the X-API-Key header */
        apiKey?: string;
        /** Additional headers to include in the request. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
}
export declare class Spans {
    protected readonly _options: Spans.Options;
    protected _comments: Comments | undefined;
    constructor(_options: Spans.Options);
    get comments(): Comments;
    /**
     * Get span by uuid.
     *
     * @param {string} spanUuid
     * @param {Spans.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link MirascopeApi.UnprocessableEntityError}
     *
     * @example
     *     await client.spans.get("span_uuid")
     */
    get(spanUuid: string, requestOptions?: Spans.RequestOptions): core.HttpResponsePromise<MirascopeApi.SpanMoreDetails>;
    private __get;
    /**
     * Update span by uuid.
     *
     * @param {string} spanUuid
     * @param {MirascopeApi.SpanUpdate} request
     * @param {Spans.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link MirascopeApi.UnprocessableEntityError}
     *
     * @example
     *     await client.spans.update("span_uuid")
     */
    update(spanUuid: string, request?: MirascopeApi.SpanUpdate, requestOptions?: Spans.RequestOptions): core.HttpResponsePromise<MirascopeApi.SpanMoreDetails>;
    private __update;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
