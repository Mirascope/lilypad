/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as core from "../../../../../../../../../../core/index.js";
import * as MirascopeApi from "../../../../../../../../../index.js";
export declare namespace Annotations {
    interface Options {
        environment: core.Supplier<string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        /** Override the X-API-Key header */
        apiKey: core.Supplier<string>;
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Override the X-API-Key header */
        apiKey?: string;
        /** Additional headers to include in the request. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
}
export declare class Annotations {
    protected readonly _options: Annotations.Options;
    constructor(_options: Annotations.Options);
    /**
     * Get annotations by functions.
     *
     * @param {string} projectUuid
     * @param {string} spanUuid
     * @param {Annotations.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link MirascopeApi.UnprocessableEntityError}
     *
     * @example
     *     await client.ee.projects.spans.annotations.list("project_uuid", "span_uuid")
     */
    list(projectUuid: string, spanUuid: string, requestOptions?: Annotations.RequestOptions): core.HttpResponsePromise<MirascopeApi.AnnotationPublic[]>;
    private __list;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
