/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as core from "../../../../core/index.js";
import * as MirascopeApi from "../../../index.js";
import { Invites } from "../resources/invites/client/Client.js";
export declare namespace Organizations {
    interface Options {
        environment: core.Supplier<string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        /** Override the X-API-Key header */
        apiKey: core.Supplier<string>;
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Override the X-API-Key header */
        apiKey?: string;
        /** Additional headers to include in the request. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
}
export declare class Organizations {
    protected readonly _options: Organizations.Options;
    protected _invites: Invites | undefined;
    constructor(_options: Organizations.Options);
    get invites(): Invites;
    /**
     * Update an organization.
     *
     * @param {MirascopeApi.OrganizationUpdate} request
     * @param {Organizations.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link MirascopeApi.UnprocessableEntityError}
     *
     * @example
     *     await client.organizations.update()
     */
    update(request?: MirascopeApi.OrganizationUpdate, requestOptions?: Organizations.RequestOptions): core.HttpResponsePromise<MirascopeApi.OrganizationPublic>;
    private __update;
    /**
     * Create an organization.
     *
     * @param {MirascopeApi.OrganizationCreate} request
     * @param {Organizations.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link MirascopeApi.UnprocessableEntityError}
     *
     * @example
     *     await client.organizations.create({
     *         name: "name"
     *     })
     */
    create(request: MirascopeApi.OrganizationCreate, requestOptions?: Organizations.RequestOptions): core.HttpResponsePromise<MirascopeApi.OrganizationPublic>;
    private __create;
    /**
     * Delete an organization.
     *
     * @param {Organizations.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.organizations.delete()
     */
    delete(requestOptions?: Organizations.RequestOptions): core.HttpResponsePromise<MirascopeApi.UserPublic>;
    private __delete;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
