/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as core from "../../../../core/index.js";
import * as MirascopeApi from "../../../index.js";
export declare namespace Environments {
    interface Options {
        environment: core.Supplier<string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        /** Override the X-API-Key header */
        apiKey: core.Supplier<string>;
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Override the X-API-Key header */
        apiKey?: string;
        /** Additional headers to include in the request. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
}
export declare class Environments {
    protected readonly _options: Environments.Options;
    constructor(_options: Environments.Options);
    /**
     * Get all environments for a project.
     *
     * @param {Environments.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.environments.list()
     */
    list(requestOptions?: Environments.RequestOptions): core.HttpResponsePromise<MirascopeApi.EnvironmentPublic[]>;
    private __list;
    /**
     * Create a new environment.
     *
     * @param {MirascopeApi.EnvironmentCreate} request
     * @param {Environments.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link MirascopeApi.UnprocessableEntityError}
     *
     * @example
     *     await client.environments.create({
     *         name: "name"
     *     })
     */
    create(request: MirascopeApi.EnvironmentCreate, requestOptions?: Environments.RequestOptions): core.HttpResponsePromise<MirascopeApi.EnvironmentPublic>;
    private __create;
    /**
     * Get environment by UUID.
     *
     * @param {string} environmentUuid
     * @param {Environments.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link MirascopeApi.UnprocessableEntityError}
     *
     * @example
     *     await client.environments.get("environment_uuid")
     */
    get(environmentUuid: string, requestOptions?: Environments.RequestOptions): core.HttpResponsePromise<MirascopeApi.EnvironmentPublic>;
    private __get;
    /**
     * Delete an environment.
     *
     * @param {string} environmentUuid
     * @param {Environments.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link MirascopeApi.UnprocessableEntityError}
     *
     * @example
     *     await client.environments.delete("environment_uuid")
     */
    delete(environmentUuid: string, requestOptions?: Environments.RequestOptions): core.HttpResponsePromise<boolean>;
    private __delete;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
