# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel
from .event import Event
from .message_param import MessageParam
from .scope import Scope
from .tag_public import TagPublic


class SpanMoreDetails(UncheckedBaseModel):
    """
    Span more details model.
    """

    uuid_: typing_extensions.Annotated[str, FieldMetadata(alias="uuid")]
    project_uuid: str
    function_uuid: typing.Optional[str] = None
    display_name: str
    provider: str
    model: str
    scope: Scope
    input_tokens: typing.Optional[float] = None
    output_tokens: typing.Optional[float] = None
    duration_ms: typing.Optional[float] = None
    signature: typing.Optional[str] = None
    code: typing.Optional[str] = None
    arg_values: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    output: typing.Optional[str] = None
    messages: typing.List[MessageParam]
    data: typing.Dict[str, typing.Optional[typing.Any]]
    cost: typing.Optional[float] = None
    template: typing.Optional[str] = None
    status: typing.Optional[str] = None
    events: typing.Optional[typing.List[Event]] = None
    tags: typing.Optional[typing.List[TagPublic]] = None
    session_id: typing.Optional[str] = None
    span_id: str
    response: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    response_model: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
