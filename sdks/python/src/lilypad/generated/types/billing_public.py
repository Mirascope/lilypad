# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel
from .subscription_status import SubscriptionStatus


class BillingPublic(UncheckedBaseModel):
    """
    Schema for public billing information.
    """

    stripe_customer_id: typing.Optional[str] = None
    stripe_subscription_id: typing.Optional[str] = None
    stripe_price_id: typing.Optional[str] = None
    subscription_status: typing.Optional[SubscriptionStatus] = None
    subscription_current_period_start: typing.Optional[dt.datetime] = None
    subscription_current_period_end: typing.Optional[dt.datetime] = None
    usage_quantity: typing.Optional[int] = None
    last_usage_report: typing.Optional[dt.datetime] = None
    cancel_at_period_end: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether the subscription should be canceled at the end of the period
    """

    metadata: typing_extensions.Annotated[
        typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]], FieldMetadata(alias="metadata_")
    ] = None
    uuid_: typing_extensions.Annotated[str, FieldMetadata(alias="uuid")]
    organization_uuid: str
    created_at: dt.datetime

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
