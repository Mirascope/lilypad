# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .evaluation_type import EvaluationType
from .label import Label


class AnnotationCreate(UncheckedBaseModel):
    """
    Annotation create model.
    """

    span_uuid: typing.Optional[str] = None
    project_uuid: typing.Optional[str] = None
    function_uuid: typing.Optional[str] = None
    label: typing.Optional[Label] = None
    reasoning: typing.Optional[str] = None
    type: typing.Optional[EvaluationType] = None
    data: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    assigned_to: typing.Optional[typing.List[str]] = None
    assignee_email: typing.Optional[typing.List[str]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
