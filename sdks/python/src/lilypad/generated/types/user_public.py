# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel
from .user_consent_public import UserConsentPublic
from .user_organization_public import UserOrganizationPublic


class UserPublic(UncheckedBaseModel):
    """
    User public model
    """

    first_name: str
    last_name: typing.Optional[str] = None
    email: str
    active_organization_uuid: typing.Optional[str] = None
    keys: typing.Optional[typing.Dict[str, str]] = None
    uuid_: typing_extensions.Annotated[str, FieldMetadata(alias="uuid")]
    access_token: typing.Optional[str] = None
    user_organizations: typing.Optional[typing.List[UserOrganizationPublic]] = None
    scopes: typing.Optional[typing.List[str]] = None
    user_consents: typing.Optional[UserConsentPublic] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
