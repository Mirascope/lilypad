# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, update_forward_refs
from ..core.unchecked_base_model import UncheckedBaseModel


class PaginatedSpanPublic(UncheckedBaseModel):
    items: typing.List["SpanPublic"] = pydantic.Field()
    """
    Current slice of items
    """

    limit: int = pydantic.Field()
    """
    Requested page size (limit)
    """

    offset: int = pydantic.Field()
    """
    Requested offset
    """

    total: int = pydantic.Field()
    """
    Total number of items
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from .span_public import SpanPublic  # noqa: E402, F401, I001

update_forward_refs(PaginatedSpanPublic)
