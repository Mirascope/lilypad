# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .telemetry_send_traces_request_resource_spans_item_resource_attributes_item import (
    TelemetrySendTracesRequestResourceSpansItemResourceAttributesItem,
)


class TelemetrySendTracesRequestResourceSpansItemResource(UniversalBaseModel):
    attributes: typing.Optional[
        typing.List[TelemetrySendTracesRequestResourceSpansItemResourceAttributesItem]
    ] = None
    dropped_attributes_count: typing_extensions.Annotated[
        typing.Optional[float], FieldMetadata(alias="droppedAttributesCount")
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
