# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel


class UserConsentPublic(UncheckedBaseModel):
    """
    UserConsent public model.
    """

    privacy_policy_version: typing.Optional[str] = pydantic.Field(default=None)
    """
    Last updated date of the privacy policy accepted
    """

    privacy_policy_accepted_at: dt.datetime
    tos_version: typing.Optional[str] = pydantic.Field(default=None)
    """
    Last updated date of the terms of service accepted
    """

    tos_accepted_at: dt.datetime
    uuid_: typing_extensions.Annotated[str, FieldMetadata(alias="uuid")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
