# coding: utf-8

"""
    FastAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from lilypad.models.organization_invite_public import OrganizationInvitePublic

class TestOrganizationInvitePublic(unittest.TestCase):
    """OrganizationInvitePublic unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OrganizationInvitePublic:
        """Test OrganizationInvitePublic
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OrganizationInvitePublic`
        """
        model = OrganizationInvitePublic()
        if include_optional:
            return OrganizationInvitePublic(
                invited_by = '',
                email = '0',
                expires_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                uuid = '',
                organization_uuid = '',
                user = lilypad.models.user_public.UserPublic(
                    first_name = '0', 
                    last_name = '', 
                    email = '0', 
                    active_organization_uuid = '', 
                    keys = {
                        'key' : ''
                        }, 
                    uuid = '', 
                    access_token = '', 
                    user_organizations = [
                        lilypad.models.user_organization_public.UserOrganizationPublic(
                            role = 'owner', 
                            user_uuid = '', 
                            uuid = '', 
                            organization_uuid = '', 
                            organization = lilypad.models.organization_public.OrganizationPublic(
                                name = '0', 
                                uuid = '', ), )
                        ], 
                    scopes = [
                        ''
                        ], 
                    user_consents = lilypad.models.user_consent_public.UserConsentPublic(
                        privacy_policy_version = '2025-04-04', 
                        privacy_policy_accepted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        tos_version = '2025-04-04', 
                        tos_accepted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        uuid = '', ), ),
                resend_email_id = '',
                invite_link = ''
            )
        else:
            return OrganizationInvitePublic(
                invited_by = '',
                email = '0',
                uuid = '',
                organization_uuid = '',
                user = lilypad.models.user_public.UserPublic(
                    first_name = '0', 
                    last_name = '', 
                    email = '0', 
                    active_organization_uuid = '', 
                    keys = {
                        'key' : ''
                        }, 
                    uuid = '', 
                    access_token = '', 
                    user_organizations = [
                        lilypad.models.user_organization_public.UserOrganizationPublic(
                            role = 'owner', 
                            user_uuid = '', 
                            uuid = '', 
                            organization_uuid = '', 
                            organization = lilypad.models.organization_public.OrganizationPublic(
                                name = '0', 
                                uuid = '', ), )
                        ], 
                    scopes = [
                        ''
                        ], 
                    user_consents = lilypad.models.user_consent_public.UserConsentPublic(
                        privacy_policy_version = '2025-04-04', 
                        privacy_policy_accepted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        tos_version = '2025-04-04', 
                        tos_accepted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        uuid = '', ), ),
                resend_email_id = '',
        )
        """

    def testOrganizationInvitePublic(self):
        """Test OrganizationInvitePublic"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
