# coding: utf-8

"""
    FastAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from lilypad.models.span_more_details import SpanMoreDetails

class TestSpanMoreDetails(unittest.TestCase):
    """SpanMoreDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SpanMoreDetails:
        """Test SpanMoreDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SpanMoreDetails`
        """
        model = SpanMoreDetails()
        if include_optional:
            return SpanMoreDetails(
                uuid = '',
                project_uuid = '',
                function_uuid = '',
                display_name = '',
                provider = '',
                model = '',
                scope = 'lilypad',
                input_tokens = 1.337,
                output_tokens = 1.337,
                duration_ms = 1.337,
                signature = '',
                code = '',
                arg_values = lilypad.models.arg_values.arg_values(),
                output = '',
                messages = [
                    lilypad.models.message_param.MessageParam(
                        role = '', 
                        content = [
                            null
                            ], )
                    ],
                data = lilypad.models.data.Data(),
                cost = 1.337,
                template = '',
                status = '',
                events = [
                    lilypad.models.event.Event(
                        name = '', 
                        type = '', 
                        message = '', 
                        timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                tags = [
                    lilypad.models.tag_public.TagPublic(
                        project_uuid = '', 
                        name = '0', 
                        uuid = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        organization_uuid = '', )
                    ],
                session_id = '',
                span_id = '',
                response = lilypad.models.response.response(),
                response_model = lilypad.models.response_model.response_model()
            )
        else:
            return SpanMoreDetails(
                uuid = '',
                project_uuid = '',
                display_name = '',
                provider = '',
                model = '',
                scope = 'lilypad',
                messages = [
                    lilypad.models.message_param.MessageParam(
                        role = '', 
                        content = [
                            null
                            ], )
                    ],
                data = lilypad.models.data.Data(),
                span_id = '',
        )
        """

    def testSpanMoreDetails(self):
        """Test SpanMoreDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
