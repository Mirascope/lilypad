# coding: utf-8

"""
    FastAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from lilypad.models.function_public import FunctionPublic

class TestFunctionPublic(unittest.TestCase):
    """FunctionPublic unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FunctionPublic:
        """Test FunctionPublic
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FunctionPublic`
        """
        model = FunctionPublic()
        if include_optional:
            return FunctionPublic(
                project_uuid = '',
                version_num = 56,
                name = '0',
                signature = '',
                code = '',
                hash = '',
                dependencies = {
                    'key' : lilypad.models.dependency_info.DependencyInfo(
                        version = '', 
                        extras = [
                            ''
                            ], )
                    },
                arg_types = {
                    'key' : ''
                    },
                archived = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                custom_id = '',
                prompt_template = '',
                provider = '',
                model = '',
                call_params = lilypad.models.common_call_params.CommonCallParams(
                    temperature = 1.337, 
                    max_tokens = 56, 
                    top_p = 1.337, 
                    frequency_penalty = 1.337, 
                    presence_penalty = 1.337, 
                    seed = 56, 
                    stop = null, ),
                is_versioned = True,
                uuid = ''
            )
        else:
            return FunctionPublic(
                name = '0',
                signature = '',
                code = '',
                hash = '',
                uuid = '',
        )
        """

    def testFunctionPublic(self):
        """Test FunctionPublic"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
