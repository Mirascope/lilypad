"""Add a billing table

Revision ID: 0036
Revises: 0035
Create Date: 2025-05-09 13:53:32.755998

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlmodel.sql.sqltypes import AutoString

from lilypad.server.models.base_sql_model import JSONTypeDecorator

# revision identifiers, used by Alembic.
revision: str = "0036"
down_revision: str | None = "0035"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "billings",
        sa.Column("uuid", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("organization_uuid", sa.Uuid(), nullable=False),
        sa.Column("stripe_customer_id", AutoString(), nullable=True),
        sa.Column("stripe_subscription_id", AutoString(), nullable=True),
        sa.Column("stripe_price_id", AutoString(), nullable=True),
        sa.Column("subscription_status", AutoString(), nullable=True),
        sa.Column("subscription_current_period_start", sa.DateTime(), nullable=True),
        sa.Column("subscription_current_period_end", sa.DateTime(), nullable=True),
        sa.Column("usage_quantity", sa.Integer(), nullable=False),
        sa.Column("last_usage_report", sa.DateTime(), nullable=True),
        sa.Column("metadata_", JSONTypeDecorator(), nullable=True),
        sa.ForeignKeyConstraint(
            ["organization_uuid"],
            ["organizations.uuid"],
            name=op.f("billings_organization_uuid_organizations_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("uuid", name=op.f("billings_pkey")),
    )
    with op.batch_alter_table("billings", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("billings_created_at_idx"), ["created_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("billings_organization_uuid_idx"),
            ["organization_uuid"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("billings_stripe_customer_id_idx"),
            ["stripe_customer_id"],
            unique=False,
        )
        batch_op.create_unique_constraint(
            "uix_billing_stripe_customer_id", ["stripe_customer_id"]
        )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("billings", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("billings_stripe_customer_id_idx"))
        batch_op.drop_index(batch_op.f("billings_organization_uuid_idx"))
        batch_op.drop_index(batch_op.f("billings_created_at_idx"))
        batch_op.drop_constraint("uix_billing_stripe_customer_id", type_="unique")

    op.drop_table("billings")
    # ### end Alembic commands ###
