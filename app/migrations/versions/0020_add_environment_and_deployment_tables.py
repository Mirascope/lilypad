"""Add environment and deployment tables

Revision ID: 0020
Revises: 0019
Create Date: 2025-03-14 11:06:25.131668

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlmodel.sql.sqltypes import AutoString

# revision identifiers, used by Alembic.
revision: str = "0020"
down_revision: str | None = "0019"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "environments",
        sa.Column("uuid", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("organization_uuid", sa.Uuid(), nullable=False),
        sa.Column("name", AutoString(), nullable=False),
        sa.Column("description", AutoString(), nullable=True),
        sa.Column("project_uuid", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["organization_uuid"],
            ["organizations.uuid"],
            name=op.f("environments_organization_uuid_organizations_fkey"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["project_uuid"],
            ["projects.uuid"],
            name=op.f("environments_project_uuid_projects_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("uuid", name=op.f("environments_pkey")),
        sa.UniqueConstraint(
            "organization_uuid", "project_uuid", "name", name="unique_org_proj_env_name"
        ),
    )
    with op.batch_alter_table("environments", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("environments_created_at_idx"), ["created_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("environments_name_idx"), ["name"], unique=False
        )
        batch_op.create_index(
            batch_op.f("environments_organization_uuid_idx"),
            ["organization_uuid"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("environments_project_uuid_idx"), ["project_uuid"], unique=False
        )

    op.create_table(
        "deployments",
        sa.Column("uuid", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("organization_uuid", sa.Uuid(), nullable=False),
        sa.Column("environment_uuid", sa.Uuid(), nullable=False),
        sa.Column("generation_uuid", sa.Uuid(), nullable=False),
        sa.Column("project_uuid", sa.Uuid(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("version_num", sa.Integer(), nullable=False),
        sa.Column("notes", AutoString(), nullable=True),
        sa.Column("activated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["environment_uuid"],
            ["environments.uuid"],
            name=op.f("deployments_environment_uuid_environments_fkey"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["generation_uuid"],
            ["generations.uuid"],
            name=op.f("deployments_generation_uuid_generations_fkey"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["organization_uuid"],
            ["organizations.uuid"],
            name=op.f("deployments_organization_uuid_organizations_fkey"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["project_uuid"],
            ["projects.uuid"],
            name=op.f("deployments_project_uuid_projects_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("uuid", name=op.f("deployments_pkey")),
    )
    with op.batch_alter_table("deployments", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("deployments_activated_at_idx"), ["activated_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("deployments_created_at_idx"), ["created_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("deployments_is_active_idx"), ["is_active"], unique=False
        )
        batch_op.create_index(
            batch_op.f("deployments_organization_uuid_idx"),
            ["organization_uuid"],
            unique=False,
        )
        batch_op.create_index(
            "ux_environment_active_deployment",
            ["environment_uuid"],
            unique=True,
            postgresql_where=sa.text("is_active = true"),
        )

    with op.batch_alter_table("api_keys", schema=None) as batch_op:
        batch_op.add_column(sa.Column("environment_uuid", sa.Uuid(), nullable=True))
        batch_op.create_index(
            batch_op.f("api_keys_environment_uuid_idx"),
            ["environment_uuid"],
            unique=False,
        )
        batch_op.create_foreign_key(
            batch_op.f("api_keys_environment_uuid_environments_fkey"),
            "environments",
            ["environment_uuid"],
            ["uuid"],
            ondelete="SET NULL",
        )

    with op.batch_alter_table("generations", schema=None) as batch_op:
        batch_op.drop_constraint("unique_project_generation_hash", type_="unique")

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("generations", schema=None) as batch_op:
        batch_op.create_unique_constraint(
            "unique_project_generation_hash", ["project_uuid", "hash"]
        )

    with op.batch_alter_table("api_keys", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("api_keys_environment_uuid_environments_fkey"),
            type_="foreignkey",
        )
        batch_op.drop_index(batch_op.f("api_keys_environment_uuid_idx"))
        batch_op.drop_column("environment_uuid")

    with op.batch_alter_table("deployments", schema=None) as batch_op:
        batch_op.drop_index(
            "ux_environment_active_deployment",
            postgresql_where=sa.text("is_active = true"),
        )
        batch_op.drop_index(batch_op.f("deployments_organization_uuid_idx"))
        batch_op.drop_index(batch_op.f("deployments_is_active_idx"))
        batch_op.drop_index(batch_op.f("deployments_created_at_idx"))
        batch_op.drop_index(batch_op.f("deployments_activated_at_idx"))

    op.drop_table("deployments")
    with op.batch_alter_table("environments", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("environments_project_uuid_idx"))
        batch_op.drop_index(batch_op.f("environments_organization_uuid_idx"))
        batch_op.drop_index(batch_op.f("environments_name_idx"))
        batch_op.drop_index(batch_op.f("environments_created_at_idx"))

    op.drop_table("environments")
    # ### end Alembic commands ###
