"""remove environment project relationship

Revision ID: 0024
Revises: 0023
Create Date: 2025-03-20 12:30:41.501180

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "0024"
down_revision: str | None = "0023"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("environments", schema=None) as batch_op:
        batch_op.drop_index("environments_project_uuid_idx")
        batch_op.drop_constraint("unique_org_proj_env_name", type_="unique")
        batch_op.drop_index(
            "ux_default_environment_per_project", postgresql_where="(is_default = true)"
        )
        batch_op.create_unique_constraint(
            "unique_org_env_name", ["organization_uuid", "name"]
        )
        batch_op.create_index(
            "ux_default_environment",
            ["organization_uuid"],
            unique=True,
            postgresql_where=sa.text("is_default = true"),
        )
        batch_op.drop_constraint(
            "environments_project_uuid_projects_fkey", type_="foreignkey"
        )
        batch_op.drop_column("project_uuid")

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("environments", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("project_uuid", sa.UUID(), autoincrement=False, nullable=False)
        )
        batch_op.create_foreign_key(
            "environments_project_uuid_projects_fkey",
            "projects",
            ["project_uuid"],
            ["uuid"],
            ondelete="CASCADE",
        )
        batch_op.drop_index(
            "ux_default_environment", postgresql_where=sa.text("is_default = true")
        )
        batch_op.drop_constraint("unique_org_env_name", type_="unique")
        batch_op.create_index(
            "ux_default_environment_per_project",
            ["project_uuid"],
            unique=True,
            postgresql_where="(is_default = true)",
        )
        batch_op.create_unique_constraint(
            "unique_org_proj_env_name", ["organization_uuid", "project_uuid", "name"]
        )
        batch_op.create_index(
            "environments_project_uuid_idx", ["project_uuid"], unique=False
        )

    # ### end Alembic commands ###
