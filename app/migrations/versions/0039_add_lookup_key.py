"""add lookup key

Revision ID: 0039
Revises: 0038
Create Date: 2025-05-28 21:34:27.132152

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlmodel.sql.sqltypes import AutoString

# revision identifiers, used by Alembic.
revision: str = "0039"
down_revision: str | None = "0038"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("billings", schema=None) as batch_op:
        # First add the column as nullable
        batch_op.add_column(sa.Column("lookup_key", AutoString(), nullable=True))

    # Update existing rows to have 'free' as their lookup_key
    connection = op.get_bind()
    connection.execute(
        sa.text("UPDATE billings SET lookup_key = 'free' WHERE lookup_key IS NULL")
    )

    # Now make the column non-nullable and add the index
    with op.batch_alter_table("billings", schema=None) as batch_op:
        batch_op.alter_column("lookup_key", nullable=False)
        batch_op.create_index(
            batch_op.f("billings_lookup_key_idx"), ["lookup_key"], unique=False
        )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("billings", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("billings_lookup_key_idx"))
        batch_op.drop_column("lookup_key")

    # ### end Alembic commands ###
