name: test
run-name: ${{ github.actor }} is testing the package

on:
  push:
    branches: [v1]
  pull_request:

jobs:
  # Detect which paths changed
  changes:
    runs-on: ubuntu-latest
    outputs:
      app: ${{ steps.changes.outputs.app }}
      python-sdk: ${{ steps.changes.outputs.python-sdk }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            app:
              - '**'
              - '!sdks/**'
            python-sdk:
              - 'sdks/python/**'
              - '.github/workflows/test.yml'

  test-app:
    name: Test App
    needs: changes
    if: ${{ needs.changes.outputs.app == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 5

    services:
      postgres:
        image: paradedb/paradedb:latest
        env:
          POSTGRES_DB: lilypad_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

    env:
      TEST_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/lilypad_test

    steps:
      - uses: actions/checkout@v3

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2

      - name: Install package dependencies
        run: bun install

      - name: Run tests
        run: bun run test:coverage

  test-python-sdk:
    name: Test Python SDK (Python ${{ matrix.python-version }})
    needs: changes
    if: ${{ needs.changes.outputs.python-sdk == 'true' }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.10', '3.11', '3.12', '3.13']

    defaults:
      run:
        working-directory: sdks/python

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: 'latest'

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          uv sync --dev --group test --all-extras

      - name: Run tests with coverage
        run: |
          uv run pytest tests/

      # Coverage upload will be enabled once tests are added
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v4
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     files: ./sdks/python/coverage.xml
      #     flags: python-sdk,python-${{ matrix.python-version }}
      #     name: python-sdk-${{ matrix.python-version }}
      #     fail_ci_if_error: false

      - name: Minimize uv cache
        run: uv cache prune --ci
