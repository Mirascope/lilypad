name: release
run-name: ${{ github.actor }} is releasing ${{ github.ref_name }}

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  detect-components:
    runs-on: ubuntu-latest
    outputs:
      release-python: ${{ steps.set-components.outputs.release-python }}
      release-app: ${{ steps.set-components.outputs.release-app }}
    steps:
      - name: Determine components to release from tag
        id: set-components
        run: |
          TAG_NAME="${{ github.ref_name }}"
          if [[ $TAG_NAME == py/* ]]; then
            echo "release-python=true" >> $GITHUB_OUTPUT
            echo "release-app=false" >> $GITHUB_OUTPUT
          elif [[ $TAG_NAME == app/* ]]; then
            echo "release-python=false" >> $GITHUB_OUTPUT
            echo "release-app=true" >> $GITHUB_OUTPUT
          elif [[ $TAG_NAME == v* ]]; then
            # Release both app and SDK for version tags
            echo "release-python=true" >> $GITHUB_OUTPUT
            echo "release-app=true" >> $GITHUB_OUTPUT
          else
            echo "Unknown tag format: $TAG_NAME"
            echo "Expected: py/*, app/*, or v*"
            exit 1
          fi

  release-python:
    needs: detect-components
    if: needs.detect-components.outputs.release-python == 'true'
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v3

      - name: Set up uv
        run: curl -LsSf https://astral.sh/uv/0.7.8/install.sh | sh

      - name: Set up Python
        run: uv python install 3.10

      - name: Build Python SDK Package
        working-directory: ./sdks/python
        run: uv build

      - name: Publish Python SDK Package
        working-directory: ./sdks/python
        run: uv publish

  release-app:
    needs: detect-components
    if: needs.detect-components.outputs.release-app == 'true'
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v3

      - name: Set up uv
        run: curl -LsSf https://astral.sh/uv/0.7.8/install.sh | sh

      - name: Set up Python
        run: uv python install 3.10

      - name: Build App Package
        working-directory: ./app
        run: uv build

      - name: Publish App Package
        working-directory: ./app
        run: uv publish
